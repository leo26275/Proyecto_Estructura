/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package reportes;

import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.util.logging.Level;
import java.util.logging.Logger;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRExporter;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.export.JRPdfExporter;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;


public class BOTON extends javax.swing.JFrame {

    /**
     * Creates new form BOTON
     */
    public BOTON() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        combox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        barraBaja = new javax.swing.JPanel();
        guardar = new javax.swing.JPanel();
        saveE = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        combox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cargo", "Empleado", "Clientes", "Producto", "Proveedor", "Venta ", "Compra", "Kardex", " " }));
        combox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboxActionPerformed(evt);
            }
        });
        getContentPane().add(combox, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 170, 30));

        jLabel1.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Seleccione Informe ");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 420, -1));

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENES/icons8-close-window-20 (1).png"))); // NOI18N
        jButton7.setBorder(null);
        jButton7.setBorderPainted(false);
        jButton7.setContentAreaFilled(false);
        jButton7.setFocusPainted(false);
        jButton7.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENES/icons8-close-window-20.png"))); // NOI18N
        jButton7.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENES/icons8-close-window-20.png"))); // NOI18N
        jButton7.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENES/icons8-close-window-20.png"))); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 0, -1, 30));

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setOpaque(true);
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 430, 30));

        barraBaja.setBackground(new java.awt.Color(236, 138, 32));

        guardar.setBackground(new java.awt.Color(238, 238, 238));
        guardar.setForeground(new java.awt.Color(238, 238, 238));

        saveE.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        saveE.setForeground(new java.awt.Color(236, 138, 32));
        saveE.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        saveE.setText("Seleccionar");
        saveE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        saveE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveEMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout guardarLayout = new javax.swing.GroupLayout(guardar);
        guardar.setLayout(guardarLayout);
        guardarLayout.setHorizontalGroup(
            guardarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(saveE, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        guardarLayout.setVerticalGroup(
            guardarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(saveE, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout barraBajaLayout = new javax.swing.GroupLayout(barraBaja);
        barraBaja.setLayout(barraBajaLayout);
        barraBajaLayout.setHorizontalGroup(
            barraBajaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, barraBajaLayout.createSequentialGroup()
                .addContainerGap(320, Short.MAX_VALUE)
                .addComponent(guardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        barraBajaLayout.setVerticalGroup(
            barraBajaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, barraBajaLayout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(guardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(barraBaja, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, 430, -1));

        jSeparator1.setForeground(new java.awt.Color(236, 138, 32));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 180, 20));

        jLabel2.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Informes El Encanto");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 420, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboxActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        this.dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void saveEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveEMouseClicked
        if (combox.getSelectedIndex() == 0) {
            try {
                Conexion con = new Conexion();
                Connection conn = con.getConexion();
                JasperReport reporte = (JasperReport) JRLoader.loadObjectFromFile("src\\reportes\\reportcargo.jasper");
                JasperPrint jasperPrint = JasperFillManager.fillReport(reporte, null, conn);
                JRExporter exporter = new JRPdfExporter();
                exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
                exporter.setParameter(JRExporterParameter.OUTPUT_FILE, new java.io.File("reporte_cargo.pdf"));
                exporter.exportReport();

            } catch (JRException ex) {
                Logger.getLogger(BOTON.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                File archivo = new File("reporte_cargo.pdf");
                ProcessBuilder p = new ProcessBuilder();
                p.command("cmd.exe", "/c", archivo.getAbsolutePath());
                p.start();
            } catch (IOException ex) {
                Logger.getLogger(BOTON.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (combox.getSelectedIndex() == 1) {

            try {
                Conexion con = new Conexion();
                Connection conn = con.getConexion();
                JasperReport reporte = (JasperReport) JRLoader.loadObjectFromFile("src\\reportes\\reportempleado.jasper");
                JasperPrint jasperPrint = JasperFillManager.fillReport(reporte, null, conn);
                JRExporter exporter = new JRPdfExporter();
                exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
                exporter.setParameter(JRExporterParameter.OUTPUT_FILE, new java.io.File("reporte_empleado.pdf"));
                exporter.exportReport();

            } catch (JRException ex) {
                Logger.getLogger(BOTON.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                File archivo = new File("reporte_empleado.pdf");
                ProcessBuilder p = new ProcessBuilder();
                p.command("cmd.exe", "/c", archivo.getAbsolutePath());
                p.start();
            } catch (IOException ex) {
                Logger.getLogger(BOTON.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (combox.getSelectedIndex() == 2) {

            try {
                Conexion con = new Conexion();
                Connection conn = con.getConexion();
                JasperReport reporte = (JasperReport) JRLoader.loadObjectFromFile("src\\reportes\\reportclientes.jasper");
                JasperPrint jasperPrint = JasperFillManager.fillReport(reporte, null, conn);
                JRExporter exporter = new JRPdfExporter();
                exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
                exporter.setParameter(JRExporterParameter.OUTPUT_FILE, new java.io.File("reporte_cliente.pdf"));
                exporter.exportReport();

            } catch (JRException ex) {
                Logger.getLogger(BOTON.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                File archivo = new File("reporte_cliente.pdf");
                ProcessBuilder p = new ProcessBuilder();
                p.command("cmd.exe", "/c", archivo.getAbsolutePath());
                p.start();
            } catch (IOException ex) {
                Logger.getLogger(BOTON.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (combox.getSelectedIndex() == 3) {

            try {
                Conexion con = new Conexion();
                Connection conn = con.getConexion();
                JasperReport reporte = (JasperReport) JRLoader.loadObjectFromFile("src\\reportes\\reportproducto.jasper");
                JasperPrint jasperPrint = JasperFillManager.fillReport(reporte, null, conn);
                JRExporter exporter = new JRPdfExporter();
                exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
                exporter.setParameter(JRExporterParameter.OUTPUT_FILE, new java.io.File("reporte_producto.pdf"));
                exporter.exportReport();

            } catch (JRException ex) {
                Logger.getLogger(BOTON.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                File archivo = new File("reporte_producto.pdf");
                ProcessBuilder p = new ProcessBuilder();
                p.command("cmd.exe", "/c", archivo.getAbsolutePath());
                p.start();
            } catch (IOException ex) {
                Logger.getLogger(BOTON.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (combox.getSelectedIndex() == 4) {

           try {
            Conexion con = new Conexion();
            Connection conn = con.getConexion();
            JasperReport reporte = (JasperReport) JRLoader.loadObjectFromFile("src\\reportes\\reportproveedor.jasper");
            JasperPrint jasperPrint = JasperFillManager.fillReport(reporte, null, conn);
            JRExporter exporter = new JRPdfExporter();
            exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
            exporter.setParameter(JRExporterParameter.OUTPUT_FILE, new java.io.File("reporte_proveedor.pdf"));
            exporter.exportReport();

        } catch (JRException ex) {
            Logger.getLogger(BOTON.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            File archivo = new File("reporte_proveedor.pdf");
            ProcessBuilder p = new ProcessBuilder();
            p.command("cmd.exe", "/c", archivo.getAbsolutePath());
            p.start();
        } catch (IOException ex) {
            Logger.getLogger(BOTON.class.getName()).log(Level.SEVERE, null, ex);
        }
        } else if (combox.getSelectedIndex() == 5) {

            try {
            Conexion con = new Conexion();
            Connection conn = con.getConexion();
            JasperReport reporte = (JasperReport) JRLoader.loadObjectFromFile("src\\reportes\\reportventa1.jasper");
            JasperPrint jasperPrint = JasperFillManager.fillReport(reporte, null, conn);
            JRExporter exporter = new JRPdfExporter();
            exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
            exporter.setParameter(JRExporterParameter.OUTPUT_FILE, new java.io.File("reporte_venta1.pdf"));
            exporter.exportReport();

        } catch (JRException ex) {
            Logger.getLogger(BOTON.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            File archivo = new File("reporte_venta1.pdf");
            ProcessBuilder p = new ProcessBuilder();
            p.command("cmd.exe", "/c", archivo.getAbsolutePath());
            p.start();
        } catch (IOException ex) {
            Logger.getLogger(BOTON.class.getName()).log(Level.SEVERE, null, ex);
        }
        }else if (combox.getSelectedIndex() == 6) {

            try {
                Conexion con = new Conexion();
                Connection conn = con.getConexion();
                JasperReport reporte = (JasperReport) JRLoader.loadObjectFromFile("src\\reportes\\reportcompra.jasper");
                JasperPrint jasperPrint = JasperFillManager.fillReport(reporte, null, conn);
                JRExporter exporter = new JRPdfExporter();
                exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
                exporter.setParameter(JRExporterParameter.OUTPUT_FILE, new java.io.File("reporte_compra.pdf"));
                exporter.exportReport();

            } catch (JRException ex) {
                Logger.getLogger(BOTON.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                File archivo = new File("reporte_compra.pdf");
                ProcessBuilder p = new ProcessBuilder();
                p.command("cmd.exe", "/c", archivo.getAbsolutePath());
                p.start();
            } catch (IOException ex) {
                Logger.getLogger(BOTON.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_saveEMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BOTON.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BOTON.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BOTON.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BOTON.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BOTON().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel barraBaja;
    private javax.swing.JComboBox<String> combox;
    private javax.swing.JPanel guardar;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel saveE;
    // End of variables declaration//GEN-END:variables
}
